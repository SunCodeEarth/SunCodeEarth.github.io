L.TopoJSON=L.GeoJSON.extend({addData:function(t){let o,e;if("Topology"===t.type){for(e in t.objects)t.objects.hasOwnProperty(e)&&(o=topojson.feature(t,t.objects[e]),L.GeoJSON.prototype.addData.call(this,o));return this}return L.GeoJSON.prototype.addData.call(this,t),this}}),L.topoJson=function(t,o){return new L.TopoJSON(t,o)},L.Control.coordProjection=L.Control.extend({options:{position:"bottomleft",separator:" | ",emptyString:" ",lngFirst:!1,numDigits:3,lngFormatter:void 0,latFormatter:void 0,prefix:"",crs:"EPSG4326"},onAdd:function(t){return this._container=L.DomUtil.create("div","leaflet-control-coord-projection"),L.DomEvent.disableClickPropagation(this._container),t.on("mousemove",this._onMouseMove,this),this._container.innerHTML=this.options.emptyString,this._container},onRemove:function(t){t.off("mousemove",this._onMouseMove)},_onMouseMove:function(t){let o=this._projectTo(this.options.crs,t.latlng,this.options.crsProjObject);this.options.crsProjObject||"EPSG4326"!==this.options.crs?(o=L.latLng(o.x,o.y),this.options.numDigits=3):this.options.numDigits=6;let e=this.options.lngFormatter?this.options.lngFormatter(o.lng):L.Util.formatNum(o.lng,this.options.numDigits),a=this.options.latFormatter?this.options.latFormatter(o.lat):L.Util.formatNum(o.lat,this.options.numDigits),r=this.options.lngFirst?e+this.options.separator+a:a+this.options.separator+e,i=this.options.prefix+" "+r;this._container.innerHTML=i},_projectTo:function(t,o){let e=[0,0];switch(t){case"EPSG3395":e=L.Projection.Mercator.project(o);break;case"EPSG3857":e=L.Projection.SphericalMercator.project(o);break;default:return o}return e},changeCrs:function(t){this.options.crs=t}}),L.Map.mergeOptions({positionControl:!1}),L.Map.addInitHook((function(){this.options.positionControl&&(this.positionControl=new L.Control.coordProjection,this.addControl(this.positionControl))})),L.control.coordProjection=function(t){return new L.Control.coordProjection(t)},String.prototype.format=function(){var t=arguments;return this.replace(/{(\d+)}/g,(function(o,e){return void 0!==t[e]?t[e]:o}))};let checkStr=String.fromCharCode(10003,32),spaceStr=String.fromCharCode(160,160,160,160),reAlignMapDIV=()=>{$("#map").height(window.innerHeight-$("#pageHeader").height())};var map=L.map("map",{fullscreenControl:!0}).setView([42.61,-75.33],7).fitBounds([[40.1,-79.86],[45.17,-71.69]]);let coordP=L.control.coordProjection({crs:"EPSG4326"}).addTo(map);$(document).ready((()=>{reAlignMapDIV(),map.invalidateSize(!1),map.fitBounds([[40.1,-79.86],[45.17,-71.69]])})),$(window).resize(reAlignMapDIV);let baseMapLayerNames=["Esri.WorldGrayCanvas","CartoDB.Positron","OpenStreetMap.Mapnik","Stadia.AlidadeSmooth"],basenMapLayers=Array(baseMapLayerNames.length).fill(null);baseMapLayerNames.forEach(((t,o)=>{$("#baseMapDIV").append('<a href="#" class="w3-bar-item w3-button" id="bmap{0}" onclick="switchBaseMap({0})">{1}</a>'.format(o,t+spaceStr)),basenMapLayers[o]=L.tileLayer.provider(t)})),switchBaseMap=t=>{let o=$("#bmap"+t).text();for(let e=0;e<baseMapLayerNames.length;++e)e!=t||o.includes(checkStr)?(basenMapLayers[e].removeFrom(map),$("#bmap"+e).text(baseMapLayerNames[e]+spaceStr)):(basenMapLayers[e].addTo(map),$("#bmap"+e).text(checkStr+baseMapLayerNames[e]))},switchBaseMap(0);let dataNames=["IRC Plan A","IRC Plan B","State Legislature","State Court"],jsonMapLayers=Array(4).fill(null),layerColors=d3.schemeSet1.slice(0,4),opacityInterpolator=d3.scaleSequential().domain([.5,-.3]);for(let t=0;t<dataNames.length;++t)jsonMapLayers[t]=L.topoJson(null,{style:function(o){return{color:layerColors[t],opacity:1,weight:1,fillColor:layerColors[t],fillOpacity:opacityInterpolator(o.properties.CCDistPop)}},onEachFeature:function(o,e){e.bindPopup("<p><strong>The compactness measure of the district:</strong> <br>                         Geometry CCPD: {0} <br>                         Populate Weighted CCPD: {1} <br><br>                         * CCPD is maximum Coverage Circle Path Distance-based metric. <br>                        * compactness is opposite of gerrymandering.</p>".format(o.properties.CCDist,o.properties.CCDistPop)),e.on({mouseover:t=>{t.target.setStyle({fillColor:"#000",fillOpacity:e.options.fillOpacity+.2,weight:2})},mouseout:o=>jsonMapLayers[t].resetStyle(o.target)})}}),fetch("./data/"+dataNames[t]+".topojson").then((t=>t.json())).then((o=>{jsonMapLayers[t].addData(o)}));jsonMapLayers[0].addTo(map),switchMapLayer=t=>{let o=$("#map"+t).text();o.includes(checkStr)?(jsonMapLayers[t].removeFrom(map),$("#map"+t).text(o.replace(checkStr,""))):(jsonMapLayers[t].addTo(map),$("#map"+t).text(checkStr+o))};